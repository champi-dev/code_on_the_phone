name: Terminal Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'render-app/**'
      - 'flutter-quantum-terminal/backend/**'
      - '.github/workflows/terminal-tests.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'render-app/**'
      - 'flutter-quantum-terminal/backend/**'

jobs:
  test-nodejs-terminal:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Install dependencies
      working-directory: ./render-app
      run: |
        npm ci || npm install
        npm install --save-dev jest @jest/globals ws
    
    - name: Run tests
      working-directory: ./render-app
      run: npm test
    
    - name: Generate coverage report
      working-directory: ./render-app
      run: npm run test:coverage || npm test -- --coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./render-app/coverage/lcov.info
        flags: nodejs-terminal
        name: nodejs-terminal-coverage

  test-go-terminal:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        go-version: ['1.19', '1.20', '1.21']
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: Install dependencies
      working-directory: ./flutter-quantum-terminal/backend
      run: |
        go mod download || go get -v -t -d ./...
    
    - name: Run tests
      working-directory: ./flutter-quantum-terminal/backend
      run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./flutter-quantum-terminal/backend/coverage.txt
        flags: go-terminal
        name: go-terminal-coverage

  integration-test:
    runs-on: ubuntu-latest
    needs: [test-nodejs-terminal, test-go-terminal]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
    
    - name: Install Node.js dependencies
      working-directory: ./render-app
      run: npm ci || npm install
    
    - name: Install Go dependencies
      working-directory: ./flutter-quantum-terminal/backend
      run: go mod download || go get -v -t -d ./...
    
    - name: Start Go backend
      working-directory: ./flutter-quantum-terminal/backend
      run: |
        go build -o terminal-backend
        ./terminal-backend &
        echo $! > backend.pid
        sleep 5
    
    - name: Start Node.js server
      working-directory: ./render-app
      run: |
        npm start &
        echo $! > server.pid
        sleep 5
    
    - name: Run integration tests
      run: |
        # Test health endpoints
        curl -f http://localhost:3000/health || exit 1
        curl -f http://localhost:8080/health || exit 1
        
        # Test WebSocket connectivity
        npm install -g wscat
        echo "Testing WebSocket connection..." | wscat -c ws://localhost:8080/ws -x "exit" || exit 1
    
    - name: Cleanup
      if: always()
      run: |
        if [ -f ./flutter-quantum-terminal/backend/backend.pid ]; then
          kill $(cat ./flutter-quantum-terminal/backend/backend.pid) || true
        fi
        if [ -f ./render-app/server.pid ]; then
          kill $(cat ./render-app/server.pid) || true
        fi

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        severity: 'CRITICAL,HIGH'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'
    
    - name: Run Go security checks
      working-directory: ./flutter-quantum-terminal/backend
      run: |
        go install github.com/securego/gosec/v2/cmd/gosec@latest
        gosec -fmt=json -out=gosec-report.json ./... || true
    
    - name: Run npm audit
      working-directory: ./render-app
      run: |
        npm audit --json > npm-audit.json || true
        
  performance-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
    
    - name: Run Go benchmarks
      working-directory: ./flutter-quantum-terminal/backend
      run: |
        go test -bench=. -benchmem -benchtime=10s > benchmark-results.txt
        cat benchmark-results.txt
    
    - name: Archive benchmark results
      uses: actions/upload-artifact@v3
      with:
        name: benchmark-results
        path: ./flutter-quantum-terminal/backend/benchmark-results.txt